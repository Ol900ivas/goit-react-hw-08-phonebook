{"version":3,"file":"static/js/289.1ef133a5.chunk.js","mappings":"+QAEaA,EAAYC,EAAAA,EAAAA,IAAH,gEAITC,EAAQD,EAAAA,EAAAA,MAAH,wGAOLE,EAAQF,EAAAA,EAAAA,MAAH,+PAYLG,EAAUH,EAAAA,EAAAA,OAAH,kZ,wKCmEpB,EArFoB,WAClB,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAV,IAA3BH,MACFI,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,MACdC,GAAgBD,EAAAA,EAAAA,MAEhBE,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MAEd,OAAQhB,GACN,IAAK,OACHC,EAAQe,GACR,MAEF,IAAK,SACHb,EAAUa,GACV,MAEF,QACE,OAEL,EAmBKC,EAAQ,WACZhB,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAMe,SAvBa,SAAAJ,GACnBA,EAAMK,iBACN,IAAMC,EAAON,EAAMC,OAMnB,GAJqBX,EAAMiB,MACzB,SAAAC,GAAO,OACLA,EAAQtB,KAAKuB,gBAAkBH,EAAKI,SAASxB,KAAKgB,MAAMO,aADnD,IAIP,OAAOE,EAAAA,GAAAA,MAAA,UAAeL,EAAKI,SAASxB,KAAKgB,MAAlC,4BAGTR,GAASkB,EAAAA,EAAAA,IAAW,CAAE1B,KAAMA,EAAME,OAAQA,KAC1Ce,IACAG,EAAKH,OACN,EAQC,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOU,QAASjB,EAAhB,mBACA,SAAC,KAAD,CACEkB,KAAK,OACL5B,KAAK,OACL6B,GAAInB,EACJoB,YAAY,kBACZC,SAAUlB,EACVmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAAC,KAAD,YACE,SAAC,KAAD,CAAOP,QAASf,EAAhB,qBACA,SAAC,KAAD,CACEgB,KAAK,MACL5B,KAAK,SACL6B,GAAIjB,EACJkB,YAAY,YACZC,SAAUlB,EACVmB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZ,SAAC,KAAD,CAASN,KAAK,SAASO,UAAWnC,IAASE,EAA3C,2BAKL,E,6BCxFYkC,EAASzC,EAAAA,EAAAA,OAAH,iQCuBnB,EAlBoB,SAAC,GAA0B,IAAxBkC,EAAuB,EAAvBA,GAAI7B,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACzBM,GAAWC,EAAAA,EAAAA,MAKjB,OACE,iCACE,yBACGT,EADH,KACWE,MAEX,SAACkC,EAAD,CAAQC,QATQ,WAClB7B,GAAS8B,EAAAA,EAAAA,IAAcT,GACxB,EAOG,UACE,SAAC,MAAD,CAAUU,KAAK,aAItB,ECrBYC,EAAK7C,EAAAA,EAAAA,GAAH,yEAMF8C,EAAK9C,EAAAA,EAAAA,GAAH,iRC4Bf,EAhCiB,WACf,IAAQS,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAV,IAA3BH,MACFsC,GAASrC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMoC,MAAV,IAChCC,QAAQC,WAAWxC,GACnBuC,QAAQC,IAAIxC,GACZuC,QAAQC,WAAWF,GACnB,IAOMG,EAPsB,WAC1B,IAAMC,EAAoBJ,EAAOnB,cACjC,OAAOnB,EAAMsC,QAAO,SAAApB,GAAO,OACzBA,EAAQtB,KAAKuB,cAAcwB,SAASD,EADX,GAG5B,CAEwBE,GAEzB,OACE,SAACR,EAAD,UACGK,EAAiBI,KAAI,SAAA3B,GACpB,OACE,SAACmB,EAAD,WACE,SAAC,EAAD,CACEZ,GAAIP,EAAQO,GACZ7B,KAAMsB,EAAQtB,KACdE,OAAQoB,EAAQpB,UAJXoB,EAAQO,GAQpB,KAGN,EChCYjC,EAAQD,EAAAA,EAAAA,MAAH,0KAULE,EAAQF,EAAAA,EAAAA,MAAH,+P,UCWlB,EAlBe,WACb,IAAQ+C,GAAWrC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMoC,MAAV,IAA5BA,OAEFlC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,UAACb,EAAD,oCAEE,SAACC,EAAD,CAAO+B,KAAK,OAAOZ,MAAO0B,EAAQX,SARjB,SAAAjB,GACnB,IAAM4B,EAAS5B,EAAMC,OAAOC,MAC5BR,GAAS0C,EAAAA,EAAAA,GAAaR,GACvB,MAQF,ECnBYS,EAAcxD,EAAAA,EAAAA,IAAH,6RCSxB,GDGuBA,EAAAA,EAAAA,GAAH,iHAMGA,EAAAA,EAAAA,GAAH,iHCjBP,SAAC,GAAkB,IAAhByD,EAAe,EAAfA,SACd,OAAO,SAACD,EAAD,UAAcC,GACtB,GCiBD,EAdqB,WACnB,IAAM5C,GAAWC,EAAAA,EAAAA,MAIjB,OAHA4C,EAAAA,EAAAA,YAAU,WACR7C,GAAS8C,EAAAA,EAAAA,MACV,GAAE,CAAC9C,KAEF,UAAC,EAAD,YACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Wrap/Wrap.styled.js","components/Wrap/Wrap.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const InputWrap = styled.div`\n  margin: 0 0 15px 0;\n  border: none;\n`;\nexport const Label = styled.label`\n  display: inline-block;\n  width: 15%;\n  text-align: right;\n  margin: 12px;\n`;\n\nexport const Input = styled.input`\n  width: 75%;\n  font-family: 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n  padding: 5px;\n  font-size: 0.9em;\n  border-radius: 5px;\n  background: rgba(0, 0, 0, 0.07);\n  :hover {\n    background: #ffffff;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  display: block;\n  font-size: 1em;\n  padding: 10px;\n  margin: 0 auto 20px auto;\n  border-radius: 8px;\n  border: 1px solid #59b969;\n  box-shadow: 0 1px 0 0 #60bd49 inset;\n  background-image: linear-gradient(to bottom, #63e651, #42753e);\n  :hover {\n    background-image: linear-gradient(to bottom, #51db1c, #6ba061);\n  }\n  :disabled {\n    background: #82cf78c2;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { useState } from 'react';\nimport { InputWrap, Label, Input, FormBtn } from './ContactForm.styled';\nimport { toast } from 'react-hot-toast';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { items } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const nameIncludes = items.find(\n      contact =>\n        contact.name.toLowerCase() === form.elements.name.value.toLowerCase()\n    );\n    if (nameIncludes) {\n      return toast.error(`${form.elements.name.value} is already in contacts`);\n    }\n\n    dispatch(addContact({ name: name, number: number }));\n    reset();\n    form.reset();\n  };\n  // Clear component state (including making the submit button disabled)\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputWrap>\n        <Label htmlFor={nameInputId}>Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          placeholder=\"Sergiy Petrenko\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </InputWrap>\n      <InputWrap>\n        <Label htmlFor={numberInputId}>Number</Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          placeholder=\"123-45-67\"\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputWrap>\n\n      <FormBtn type=\"submit\" disabled={!name || !number}>\n        Add contact\n      </FormBtn>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  border: none;\n  border-radius: 50%;\n  height: 30px;\n  width: 30px;\n  align-items: center;\n  transition: transform 300ms ease-in-out;\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { RxCross2 } from 'react-icons/rx';\n\nimport { Button } from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <p>\n        {name}: {number}\n      </p>\n      <Button onClick={handleClick}>\n        <RxCross2 size=\"20px\" />\n      </Button>\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  width: 80%;\n  margin: 0 auto;\n  padding: 0;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  padding-left: 8px;\n  padding-right: 8px;\n  gap: 40px;\n  align-items: center;\n  justify-content: space-between;\n  transition: background-color 300ms ease-in-out;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.07);\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { Ul, Li } from './Contacts.styled';\n\nconst Contacts = () => {\n  const { items } = useSelector(state => state.contacts);\n  const filter = useSelector(state => state.filter);\n  console.log(typeof items);\n  console.log(items);\n  console.log(typeof filter);\n  const getFilteredContacts = () => {\n    const normalaizedFilter = filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalaizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <Ul>\n      {filteredContacts.map(contact => {\n        return (\n          <Li key={contact.id}>\n            <ContactItem\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          </Li>\n        );\n      })}\n    </Ul>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: right;\n  gap: 12px;\n  margin: 0 0 20px 0;\n  border: none;\n`;\n\nexport const Input = styled.input`\n  width: 57%;\n  font-family: 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n  padding: 5px;\n  font-size: 0.9em;\n  border-radius: 5px;\n  background: rgba(0, 0, 0, 0.07);\n  :hover {\n    background: #ffffff;\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Label, Input } from './Filter.styled';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nconst Filter = () => {\n  const { filter } = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const filter = event.target.value;\n    dispatch(changeFilter(filter));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={handleChange} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const GeneralWrap = styled.div`\n  width: 500px;\n  margin: 40px auto;\n  padding: 16px 10px;\n  border: 7px solid #72b372;\n  border-radius: 10px;\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  color: #444;\n  background-color: #f0f0f0;\n  box-shadow: 0 0 20px 0 #000000;\n`;\n\nexport const TitleH1 = styled.h1`\n  margin: 0 15px 20px;\n  border-bottom: 2px solid #72b372;\n  padding: 5px 10px 5px 0;\n`;\n\nexport const TitleH2 = styled.h2`\n  margin: 0 15px 20px;\n  border-bottom: 2px solid #72b372;\n  padding: 5px 10px 5px 0;\n`;\n","import PropTypes from 'prop-types';\nimport { GeneralWrap } from './Wrap.styled';\n\nconst Wrap = ({ children }) => {\n  return <GeneralWrap>{children}</GeneralWrap>;\n};\n\nWrap.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Wrap;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport Wrap from 'components/Wrap/Wrap';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Wrap>\n      <ContactForm />\n      <Filter />\n      <Contacts />\n    </Wrap>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["InputWrap","styled","Label","Input","FormBtn","useState","name","setName","number","setNumber","items","useSelector","state","contacts","dispatch","useDispatch","nameInputId","nanoid","numberInputId","handleChange","event","target","value","reset","onSubmit","preventDefault","form","find","contact","toLowerCase","elements","toast","addContact","htmlFor","type","id","placeholder","onChange","pattern","title","required","disabled","Button","onClick","deleteContact","size","Ul","Li","filter","console","log","filteredContacts","normalaizedFilter","includes","getFilteredContacts","map","changeFilter","GeneralWrap","children","useEffect","fetchContacts"],"sourceRoot":""}