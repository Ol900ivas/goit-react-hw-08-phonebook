{"version":3,"file":"static/js/751.f3033a39.chunk.js","mappings":"+QAEaA,EAAYC,EAAAA,EAAAA,IAAH,gEAITC,EAAQD,EAAAA,EAAAA,MAAH,wGAOLE,EAAQF,EAAAA,EAAAA,MAAH,+PAYLG,EAAUH,EAAAA,EAAAA,OAAH,ua,0FCtBPI,GAAWJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,2O,+CCQrB,IARa,SAAC,GAAkB,IAAhBM,EAAe,EAAfA,SACd,OAAO,SAAC,KAAD,UAAcA,GACtB,C,6GCHYC,EAAcP,EAAAA,EAAAA,IAAH,6RAYXQ,EAAUR,EAAAA,EAAAA,GAAH,iHAMGA,EAAAA,EAAAA,GAAH,gH,yMCyFpB,EA/FqB,WACnB,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAIMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAElBG,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MACd,OAAQf,GACN,IAAK,OACHC,EAAQc,GACR,MACF,IAAK,QACHZ,EAASY,GACT,MAEF,IAAK,WACHV,EAAYU,GACZ,MAEF,QACE,OAEL,EACKC,EAAY,mCAAG,WAAMC,GAAN,uEACnBA,EAAEC,iBACIC,EAAOF,EAAEH,OACfR,GACEc,EAAAA,EAAAA,IAAO,CACLpB,KAAMmB,EAAKE,SAASrB,KAAKe,MACzBb,MAAOiB,EAAKE,SAASnB,MAAMa,MAC3BX,SAAUe,EAAKE,SAASjB,SAASW,SAGrCI,EAAKG,QAVc,2CAAH,sDAalB,OACE,SAACC,EAAA,EAAD,WACE,kBAAMC,SAAUR,EAAhB,WACE,SAAC,KAAD,wBACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAOS,QAASjB,EAAhB,mBACA,SAAC,KAAD,CACEkB,KAAK,OACL1B,KAAK,OACL2B,GAAInB,EAEJoB,SAAUhB,EACVG,MAAOf,EACP6B,UAAQ,QAGZ,UAAC,KAAD,YACE,SAAC,KAAD,CAAOJ,QAASf,EAAhB,oBACA,SAAC,KAAD,CACEgB,KAAK,QACL1B,KAAK,QACL2B,GAAIjB,EAEJkB,SAAUhB,EACVG,MAAOb,EACP2B,UAAQ,QAGZ,UAAC,KAAD,YACE,SAAC,KAAD,CAAOJ,QAASd,EAAhB,uBACA,SAAC,KAAD,CACEe,KAAK,WACL1B,KAAK,WACL2B,GAAIhB,EAEJiB,SAAUhB,EACVG,MAAOX,EACPyB,UAAQ,QAIZ,SAAC,KAAD,CAASH,KAAK,SAASI,UAAW9B,IAASE,IAAUE,EAArD,sBAIA,SAAC,IAAD,CAAU2B,GAAG,SAAb,kDAIP,ECrGD,EAJqB,WACnB,OAAO,SAAC,EAAD,GACR,C","sources":["components/ContactForm/ContactForm.styled.js","components/RegisterForm/RegisterForm.styled.js","components/Wrap/Wrap.jsx","components/Wrap/Wrap.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const InputWrap = styled.div`\n  margin: 0 0 15px 0;\n  border: none;\n`;\nexport const Label = styled.label`\n  display: inline-block;\n  width: 15%;\n  text-align: right;\n  margin: 12px;\n`;\n\nexport const Input = styled.input`\n  width: 75%;\n  font-family: 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n  padding: 5px;\n  font-size: 0.9em;\n  border-radius: 5px;\n  background: rgba(0, 0, 0, 0.07);\n  :hover {\n    background: #ffffff;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  display: block;\n  font-size: 1em;\n  padding: 10px;\n  min-width: 180px;\n  margin: 0 auto 20px auto;\n  border-radius: 8px;\n  border: 1px solid #59b969;\n  box-shadow: 0 1px 0 0 #60bd49 inset;\n  background-image: linear-gradient(to bottom, #63e651, #42753e);\n  :hover {\n    background-image: linear-gradient(to bottom, #51db1c, #6ba061);\n  }\n  :disabled {\n    background: #82cf78c2;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const FormLink = styled(Link)`\n  display: block;\n  margin-bottom: 10px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 20px;\n  color: inherit;\n  &:hover {\n    filter: drop-shadow(0px 4px 10px rgba(81, 219, 28, 0.9));\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { GeneralWrap } from './Wrap.styled';\n\nconst Wrap = ({ children }) => {\n  return <GeneralWrap>{children}</GeneralWrap>;\n};\n\nWrap.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Wrap;\n","import styled from '@emotion/styled';\n\nexport const GeneralWrap = styled.div`\n  width: 500px;\n  margin: 40px auto;\n  padding: 16px 10px;\n  border: 7px solid #72b372;\n  border-radius: 10px;\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  color: #444;\n  background-color: #f0f0f0;\n  box-shadow: 0 0 20px 0 #000000;\n`;\n\nexport const TitleH1 = styled.h1`\n  margin: 0 15px 20px;\n  border-bottom: 2px solid #72b372;\n  padding: 5px 10px 5px 0;\n`;\n\nexport const TitleH2 = styled.h2`\n  margin: 0 15px 20px;\n  border-bottom: 2px solid #72b372;\n  padding: 5px 10px 5px 0;\n`;\n","import { useState } from 'react';\nimport {\n  FormBtn,\n  Input,\n  InputWrap,\n  Label,\n} from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/auth/authOperations';\nimport Wrap from 'components/Wrap/Wrap';\nimport { TitleH1 } from 'components/Wrap/Wrap.styled';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { FormLink } from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  //   const [showPassword, setShowPassword] = useState(false);\n  //   const { isAuth } = useSelector(state => state.isAuth);\n  //   console.log(isAuth);\n  const dispatch = useDispatch();\n\n  const nameInputId = nanoid();\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    dispatch(\n      signUp({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Wrap>\n      <form onSubmit={handleSubmit}>\n        <TitleH1>Register</TitleH1>\n        <InputWrap>\n          <Label htmlFor={nameInputId}>Name</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id={nameInputId}\n            // placeholder=\"Name\"\n            onChange={handleChange}\n            value={name}\n            required\n          />\n        </InputWrap>\n        <InputWrap>\n          <Label htmlFor={emailInputId}>Email</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id={emailInputId}\n            // placeholder=\"Email\"\n            onChange={handleChange}\n            value={email}\n            required\n          />\n        </InputWrap>\n        <InputWrap>\n          <Label htmlFor={passwordInputId}>Password</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id={passwordInputId}\n            // placeholder=\"Password\"\n            onChange={handleChange}\n            value={password}\n            required\n          />\n        </InputWrap>\n\n        <FormBtn type=\"submit\" disabled={!name || !email || !password}>\n          Sign up\n        </FormBtn>\n\n        <FormLink to=\"/login\">Already have an account? Sign in</FormLink>\n      </form>\n    </Wrap>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["InputWrap","styled","Label","Input","FormBtn","FormLink","Link","children","GeneralWrap","TitleH1","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","nameInputId","nanoid","emailInputId","passwordInputId","handleChange","event","target","value","handleSubmit","e","preventDefault","form","signUp","elements","reset","Wrap","onSubmit","htmlFor","type","id","onChange","required","disabled","to"],"sourceRoot":""}